!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).OpenAI={})}(this,function(e){"use strict";class t extends Error{constructor(e){super(e),this.name="APIError"}}class r extends t{constructor(e,t,r,s){const i=function(e,t,r,s){let i=`${e}: ${t}`;return r&&Object.keys(r).length>0&&(i+=`\nheaders: ${JSON.stringify(r)}`),s&&Object.keys(s).length>0&&(i+=`\nbody: ${JSON.stringify(s)}`),i}(t,e,r,s);super(i),this.status=t,this.headers=r,this.error=s,this.code=s?.code,this.param=s?.param,this.type=s?.type}}class s extends r{}class i extends r{}class a extends r{}class n extends r{}class o extends r{}class l extends r{}class d extends r{}class c extends t{}class h{constructor({baseURL:e,apiKey:t,organization:r,timeout:s,maxRetries:i,defaultHeaders:a,defaultQuery:n,fetch:o,signal:l,dangerouslyAllowBrowser:d=!1}){this.baseURL=e,this.apiKey=t,this.organization=r,this.timeout=s??864e5,this.maxRetries=i??2,this.fetch=o,this.signal=l,this.dangerouslyAllowBrowser=d,this.defaultHeaders=Object.assign({"Content-Type":"application/json","User-Agent":h.getUserAgent(),...(t?{"Authorization":`Bearer ${t}`}:{}),...(r?{"OpenAI-Organization":r}:{})},a),this.defaultQuery=Object.assign({},n)}get(e,{query:t,headers:r,maxRetries:s,timeout:i,signal:a}={}){return this.methodRequest("get",e,{query:t,headers:r,maxRetries:s,timeout:i,signal:a})}post(e,{body:t,query:r,headers:s,maxRetries:i,timeout:a,signal:n}={}){return this.methodRequest("post",e,{body:t,query:r,headers:s,maxRetries:i,timeout:a,signal:n})}patch(e,{body:t,headers:r,maxRetries:s,timeout:i,signal:a}={}){return this.methodRequest("patch",e,{body:t,headers:r,maxRetries:s,timeout:i,signal:a})}put(e,{body:t,headers:r,maxRetries:s,timeout:i,signal:a}={}){return this.methodRequest("put",e,{body:t,headers:r,maxRetries:s,timeout:i,signal:a})}delete(e,{headers:t,maxRetries:r,timeout:s,signal:i}={}){return this.methodRequest("delete",e,{headers:t,maxRetries:r,timeout:s,signal:i})}methodRequest(e,t,r){return this.request(Object.assign({},r,{method:e,path:t}))}buildURL(e,t){let r=this.baseURL+e;if(t){const e=Object.entries(t).map(([e,t])=>{if(null==t)return;if(Array.isArray(t)){if(0===t.length)return;return`${e}=${t.map(encodeURIComponent).join(",")}`}return`${e}=${encodeURIComponent(t)}`}).filter(Boolean).join("&");e.length>0&&(r+=`?${e}`)}return r}buildHeaders({headers:e,body:t}){const r=Object.assign({},this.defaultHeaders,e);return t instanceof FormData&&(delete r["Content-Type"],delete r["content-type"]),r}async request(e,t){if(!this.apiKey&&!this.dangerouslyAllowBrowser)throw new c("The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).");if(!this.baseURL)throw new c("The OPENAI_BASE_URL environment variable is missing or empty; either provide it, or instantiate the OpenAI client with a baseURL option, like new OpenAI({ baseURL: 'https://my.test.server' }).");const{method:r,path:s,query:i,body:a,headers:n,maxRetries:o,timeout:l,signal:d}=e,u=t?.retriesRemaining??o??this.maxRetries,p=this.buildURL(s,i),m=this.buildHeaders({headers:n,body:a});let f;if(a instanceof FormData)f=a;else if(null!=a){if("get"===r.toLowerCase())throw new c("Body isn't supported for GET requests");f=JSON.stringify(a)}const g=l??this.timeout;let y,b;try{const e=await this.getRequestController({timeout:g,signal:d});b=await(this.fetch||fetch)(p,{method:r,body:f,headers:m,signal:e.signal}),y=new x({response:b,options:e})}catch(e){if(y=new x({options:t?.options}),u>0)return await this.retryRequest(e,{...t,retriesRemaining:u-1,options:y});throw e}if(y.abort(),b.ok)return{response:b,options:y};if(b.status>=400&&b.status<500){const e=await b.clone().json().catch(()=>null);return this.error(b.status,e,b.headers)}if(u>0)return this.retryRequest(b,{...t,retriesRemaining:u-1,options:y});throw new r(b.status.toString(),null,b.headers,null)}async retryRequest(e,t){const r=t.retriesRemaining;let s,i=e;if(i instanceof Error?s=500:s=i.headers?.["x-should-retry-after-ms"],!s)return this.request(e,t);const a=parseInt(s);if(isNaN(a))return this.request(e,t);return await new Promise(e=>setTimeout(async()=>{try{const s=await this.request(e,t);e(s)}catch(t){e(t)}},a)),this.request(e,{...t,retriesRemaining:r-1})}error(e,t,s){switch(e){case 400:return new i(e,t,s);case 401:return new a(e,t,s);case 403:return new n(e,t,s);case 429:return new o(e,t,s);case 500:return new l(e,t,s);case 502:return new d(e,t,s);case 503:return new d(e,t,s);case 504:return new d(e,t,s);default:return new r(e,t,s)}}getRequestController(e){const{timeout:t,signal:r}=e,s=new AbortController,i=s.signal;if(r?.addEventListener("abort",()=>{s.abort()}),"number"==typeof t){const e=setTimeout(()=>s.abort(),t);i.addEventListener("abort",()=>clearTimeout(e))}return s}static getUserAgent(){return`${this.name}/js ${this.version}`}}h.APIErr=t,h.APIConnectionError=s,h.APIConnectionTimeoutError=class extends s{},h.APIUserAbortError=class extends s{},h.NotFoundError=i,h.ConflictError=class extends i{},h.UnprocessableEntityError=class extends i{},h.AuthenticationError=a,h.PermissionDeniedError=n,h.RateLimitError=o,h.InternalServerError=l,h.APIResourceNotFoundError=class extends i{},h.BadRequestError=class extends t{},h.BadRequestParamError=class extends t{},h.APIError=t,h.APIConnectionError=s,h.APIConnectionTimeoutError=s,h.APIUserAbortError=s,h.NotFoundError=i,h.ConflictError=i,h.UnprocessableEntityError=i,h.AuthenticationError=a,h.PermissionDeniedError=n,h.RateLimitError=o,h.InternalServerError=l,h.APIResourceNotFoundError=i,h.name="openai",h.version="4.20.0";class u{constructor(e){this.controller=new AbortController,this.response=e,this.options={response:e.response,options:e.options},this.stream=this.response.body.pipeThrough(this.decoder)}tee(){const e=this.stream.tee();return this.stream=e[0],new u({response:this.response,stream:e[1]})}[Symbol.asyncIterator](){return this.iterator()}iterator(){return this.stream[Symbol.asyncIterator]()}async *iterMessages(){for await(const e of this){const t=JSON.parse(e.data);if(t.choices){const e=t.choices[0];if(e){const t=e.message;if(t&&t.content&&"string"==typeof t.content)yield t.content}}}}decoder=new TransformStream({transform(e,t){const r=new TextDecoder,s=r.decode(e),i=s.split("\n\n").filter(e=>e.length>0);for(const e of i)t.enqueue(e)}})}class p{constructor(e,t){this.response=e,this.options=t.options}async text(){return this.response.text()}async json(){return this.response.json()}async *iterMessages(){const e=new u(this.response);for await(const t of e.iterMessages())yield t}decoder=new TransformStream({transform(e,t){const r=new TextDecoder,s=r.decode(e),i=s.split("\n\n").filter(e=>e.length>0);for(const e of i)t.enqueue(e)}})}class m{constructor(e){this.client=e,this.completions=new g(e),this.chat=new y(e),this.embeddings=new f(e),this.files=new b(e),this.images=new w(e),this.audio=new A(e),this.moderations=new C(e),this.models=new q(e),this.fine_tuning=new E(e)}get completions(){return new g(this.client)}get chat(){return new y(this.client)}get embeddings(){return new f(this.client)}get files(){return new b(this.client)}get images(){return new w(this.client)}get audio(){return new A(this.client)}get moderations(){return new C(this.client)}get models(){return new q(this.client)}get fine_tuning(){return new E(this.client)}}class f{constructor(e){this.client=e}create(e,t){return this.client.post("/embeddings",Object.assign({body:e},t))}}class g{constructor(e){this.client=e}create(e,t){return this.client.post("/completions",Object.assign({body:e},t))}}class y{constructor(e){this.client=e}create(e,t){return this.client.post("/chat/completions",Object.assign({body:e},t))}}class b{constructor(e){this.client=e}create(e,t){return this.client.post("/files",Object.assign({body:e},t))}list(e){return this.client.get("/files",e)}retrieve(e,t){return this.client.get(`/files/${e}`,t)}del(e,t){return this.client.delete(`/files/${e}`,t)}retrieveContent(e,t){return this.client.get(`/files/${e}/content`,{...t,headers:{...t?.headers,Accept:"application/json"}})}waitForProcessing(e,t={}){return this.client.post(`/files/${e}/wait`,t)}}class w{constructor(e){this.client=e}create(e,t){return this.client.post("/images/generations",Object.assign({body:e},t))}edit(e,t){return this.client.post("/images/edits",Object.assign({body:e},t))}createVariation(e,t){return this.client.post("/images/variations",Object.assign({body:e},t))}}class A{constructor(e){this.client=e}speech(e,t){return this.client.post("/audio/speech",Object.assign({body:e},t))}transcriptions=new v(this.client);translations=new k(this.client)}class v{constructor(e){this.client=e}create(e,t){return this.client.post("/audio/transcriptions",Object.assign({body:e},t))}}class k{constructor(e){this.client=e}create(e,t){return this.client.post("/audio/translations",Object.assign({body:e},t))}}class C{constructor(e){this.client=e}create(e,t){return this.client.post("/moderations",Object.assign({body:e},t))}}class q{constructor(e){this.client=e}list(e){return this.client.get("/models",e)}retrieve(e,t){return this.client.get(`/models/${e}`,t)}del(e,t){return this.client.delete(`/models/${e}`,t)}}class S{constructor(e){this.client=e}jobs=new R(this.client)}class R{constructor(e){this.client=e}create(e,t){return this.client.post("/fine_tuning/jobs",Object.assign({body:e},t))}list(e){return this.client.get("/fine_tuning/jobs",e)}retrieve(e,t){return this.client.get(`/fine_tuning/jobs/${e}`,t)}cancel(e,t){return this.client.post(`/fine_tuning/jobs/${e}/cancel`,t)}listEvents(e,t){return this.client.get(`/fine_tuning/jobs/${e}/events`,t)}}class E extends S{}class x{constructor({response:e,options:t}={}){this.response=e,this.options=t}}e.APIConnectionError=s,e.APIConnectionTimeoutError=class extends s{},e.APIError=t,e.APIUserAbortError=class extends s{},e.AuthenticationError=a,e.BadRequestError=i,e.ConflictError=class extends r{},e.InternalServerError=l,e.NotFoundError=i,e.OpenAI=class extends h{constructor(e={}){const t="string"==typeof e.apiKey?e.apiKey:globalThis.process?.env.OPENAI_API_KEY,r="string"==typeof e.organization?e.organization:globalThis.process?.env.OPENAI_ORGANIZATION,s="string"==typeof e.baseURL?e.baseURL:globalThis.process?.env.OPENAI_BASE_URL??"https://api.openai.com/v1";super({apiKey:t,organization:r,baseURL:s,...e}),this.chat=new y(this),this.completions=new g(this),this.embeddings=new f(this),this.files=new b(this),this.images=new w(this),this.audio=new A(this),this.moderations=new C(this),this.models=new q(this),this.fine_tuning=new E(this)}},e.PermissionDeniedError=n,e.RateLimitError=o,e.UnprocessableEntityError=class extends r{},Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=openai.min.js.map 